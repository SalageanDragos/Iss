package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;
@CrossOrigin
@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class ReportsController {

    /**
     * Default constructor
     */
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ReportsModel reportsRepo;

    /**
     * @param name 
     * @param description 
     * @param user
     */
    @CrossOrigin
    @PutMapping(path="/addreport")
    public void addReport(@RequestParam String name, @RequestParam String description,@RequestParam Integer user) {
        Report n = new Report();
        n.setName(name);
        n.setDescription(description);
        reportsRepo.save(n);
    }

    @GetMapping(path="/showreports")
    public @ResponseBody Iterable<Report>  getReports() {
        return reportsRepo.findAll();
    }

    /**
     * @param id
     * @return
     */
    @GetMapping(path="/showreport")
    public @ResponseBody
    Optional<Report> getReport(@RequestParam Integer id) {
        return reportsRepo.findById(id);
    }

    /**
     * @param id
     * @param name
     * @param description
     * @param user
     * @return
     */
    @PostMapping(path="/updateReport")
    public String updateReport(@RequestParam Integer id, @RequestParam String name, @RequestParam String description, @RequestParam Integer user) {

//        Report n = reportsRepo.findById(id);
//        n.setName(name);
//        n.setDescription(description);
//        reportsRepo.save(n);
        return "Saved";
    }

    /**
     * @param id 
     * @param user
     */
    @DeleteMapping(path="/deleteReport")
    public void removeReport( @RequestParam Integer id, @RequestParam Integer user) {
        reportsRepo.deleteById(id);
    }

}